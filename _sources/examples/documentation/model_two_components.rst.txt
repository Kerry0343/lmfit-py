
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/documentation/model_two_components.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_documentation_model_two_components.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_documentation_model_two_components.py:


doc_model_two_components.py
===========================

.. GENERATED FROM PYTHON SOURCE LINES 7-41



.. image-sg:: /examples/documentation/images/sphx_glr_model_two_components_001.png
   :alt: model two components
   :srcset: /examples/documentation/images/sphx_glr_model_two_components_001.png, /examples/documentation/images/sphx_glr_model_two_components_001_3_00x.png 3.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [[Model]]
        (Model(gaussian) + Model(line))
    [[Fit Statistics]]
        # fitting method   = leastsq
        # function evals   = 55
        # data points      = 101
        # variables        = 5
        chi-square         = 2.57855517
        reduced chi-square = 0.02685995
        Akaike info crit   = -360.457020
        Bayesian info crit = -347.381417
        R-squared          = 0.99194643
    [[Variables]]
        amp:        8.45930976 +/- 0.12414531 (1.47%) (init = 5)
        cen:        5.65547889 +/- 0.00917673 (0.16%) (init = 5)
        wid:        0.67545513 +/- 0.00991697 (1.47%) (init = 1)
        slope:      0.26484403 +/- 0.00574892 (2.17%) (init = 0)
        intercept: -0.96860189 +/- 0.03352202 (3.46%) (init = 1)
    [[Correlations]] (unreported correlations are < 0.100)
        C(slope, intercept) = -0.7954
        C(amp, wid)         = +0.6664
        C(amp, intercept)   = -0.2216
        C(amp, slope)       = -0.1692
        C(cen, slope)       = -0.1618
        C(wid, intercept)   = -0.1477
        C(cen, intercept)   = +0.1287
        C(wid, slope)       = -0.1127






|

.. code-block:: default

    # <examples/doc_model_two_components.py>
    import matplotlib.pyplot as plt
    from numpy import exp, loadtxt, pi, sqrt

    from lmfit import Model

    data = loadtxt('model1d_gauss.dat')
    x = data[:, 0]
    y = data[:, 1] + 0.25*x - 1.0


    def gaussian(x, amp, cen, wid):
        """1-d gaussian: gaussian(x, amp, cen, wid)"""
        return (amp / (sqrt(2*pi) * wid)) * exp(-(x-cen)**2 / (2*wid**2))


    def line(x, slope, intercept):
        """a line"""
        return slope*x + intercept


    mod = Model(gaussian) + Model(line)
    pars = mod.make_params(amp=5, cen=5, wid={'value': 1, 'min': 0},
                           slope=0, intercept=1)

    result = mod.fit(y, pars, x=x)
    print(result.fit_report())

    plt.plot(x, y, 'o')
    plt.plot(x, result.init_fit, '--', label='initial fit')
    plt.plot(x, result.best_fit, '-', label='best fit')
    plt.legend()
    plt.show()
    # <end examples/doc_model_two_components.py>


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.247 seconds)


.. _sphx_glr_download_examples_documentation_model_two_components.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: model_two_components.py <model_two_components.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: model_two_components.ipynb <model_two_components.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
