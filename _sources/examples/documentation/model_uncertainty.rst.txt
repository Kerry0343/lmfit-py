
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/documentation/model_uncertainty.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_examples_documentation_model_uncertainty.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_documentation_model_uncertainty.py:


doc_model_uncertainty.py
========================

.. GENERATED FROM PYTHON SOURCE LINES 7-38



.. image-sg:: /examples/documentation/images/sphx_glr_model_uncertainty_001.png
   :alt: model uncertainty
   :srcset: /examples/documentation/images/sphx_glr_model_uncertainty_001.png, /examples/documentation/images/sphx_glr_model_uncertainty_001_3_00x.png 3.00x
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [[Model]]
        Model(gaussian)
    [[Fit Statistics]]
        # fitting method   = leastsq
        # function evals   = 33
        # data points      = 101
        # variables        = 3
        chi-square         = 3.40883599
        reduced chi-square = 0.03478404
        Akaike info crit   = -336.263713
        Bayesian info crit = -328.418352
        R-squared          = 0.98533348
    [[Variables]]
        amp:  8.88021893 +/- 0.11359522 (1.28%) (init = 5)
        cen:  5.65866102 +/- 0.01030495 (0.18%) (init = 5)
        wid:  0.69765478 +/- 0.01030505 (1.48%) (init = 1)
    [[Correlations]] (unreported correlations are < 0.100)
        C(amp, wid) = +0.5774






|

.. code-block:: default

    # <examples/doc_model_uncertainty.py>
    import matplotlib.pyplot as plt
    from numpy import exp, loadtxt, pi, sqrt

    from lmfit import Model

    data = loadtxt('model1d_gauss.dat')
    x = data[:, 0]
    y = data[:, 1]


    def gaussian(x, amp, cen, wid):
        """1-d gaussian: gaussian(x, amp, cen, wid)"""
        return (amp / (sqrt(2*pi) * wid)) * exp(-(x-cen)**2 / (2*wid**2))


    gmodel = Model(gaussian)
    result = gmodel.fit(y, x=x, amp=5, cen=5, wid=1)

    print(result.fit_report())

    dely = result.eval_uncertainty(sigma=3)

    plt.plot(x, y, 'o')
    plt.plot(x, result.init_fit, '--', label='initial fit')
    plt.plot(x, result.best_fit, '-', label='best fit')
    plt.fill_between(x, result.best_fit-dely, result.best_fit+dely,
                     color="#ABABAB", label=r'3-$\sigma$ uncertainty band')
    plt.legend()
    plt.show()
    # <end examples/doc_model_uncertainty.py>


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.156 seconds)


.. _sphx_glr_download_examples_documentation_model_uncertainty.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: model_uncertainty.py <model_uncertainty.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: model_uncertainty.ipynb <model_uncertainty.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
